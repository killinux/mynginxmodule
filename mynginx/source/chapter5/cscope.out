cscope 15 /mnt/mydata/haoning/mygit/mynginxmodule/mynginx/source/chapter5 -q 0000000228 0000014838
	@/data/haoning/mygit/mynginxmodule/mynginx/source/chapter5/subrequest/ngx_http_mytest_module.c

1 
	~<ngx_c⁄fig.h
>

2 
	~<ngx_c‹e.h
>

3 
	~<ngx_hâp.h
>

8 
ngx_°r_t
 
	m°ock
[6];

9 } 
	tngx_hâp_myã°_˘x_t
;

13 
ngx_hâp_myã°
(
ngx_c⁄f_t
 *
cf
, 
ngx_comm™d_t
 *
cmd
, *
c⁄f
);

15 
ngx_öt_t
 
ngx_hâp_myã°_h™dÀr
(
ngx_hâp_ªque°_t
 *
r
);

16 
ngx_öt_t
 
myã°_subªque°_po°_h™dÀr
(
ngx_hâp_ªque°_t
 *
r
, *
d©a
,Çgx_öt_à
rc
);

18 
myã°_po°_h™dÀr
(
ngx_hâp_ªque°_t
 * 
r
);

23 
ngx_comm™d_t
 
	gngx_hâp_myã°_comm™ds
[] =

27 
ngx_°rög
("mytest"),

28 
NGX_HTTP_MAIN_CONF
 | 
NGX_HTTP_SRV_CONF
 | 
NGX_HTTP_LOC_CONF
 | 
NGX_HTTP_LMT_CONF
 | 
NGX_CONF_NOARGS
,

29 
ngx_hâp_myã°
,

30 
NGX_HTTP_LOC_CONF_OFFSET
,

32 
NULL


35 
ngx_nuŒ_comm™d


38 
ngx_hâp_moduÀ_t
 
	gngx_hâp_myã°_moduÀ_˘x
 =

40 
NULL
,

41 
NULL
,

43 
NULL
,

44 
NULL
,

46 
NULL
,

47 
NULL
,

49 
NULL
,

50 
NULL


53 
ngx_moduÀ_t
 
	gngx_hâp_myã°_moduÀ
 =

55 
NGX_MODULE_V1
,

56 &
ngx_hâp_myã°_moduÀ_˘x
,

57 
ngx_hâp_myã°_comm™ds
,

58 
NGX_HTTP_MODULE
,

59 
NULL
,

60 
NULL
,

61 
NULL
,

62 
NULL
,

63 
NULL
,

64 
NULL
,

65 
NULL
,

66 
NGX_MODULE_V1_PADDING


69 
ngx_öt_t
 
	$myã°_subªque°_po°_h™dÀr
(
ngx_hâp_ªque°_t
 *
r
,

70 *
d©a
, 
ngx_öt_t
 
rc
)

73 
ngx_hâp_ªque°_t
 *
¥
 = 
r
->
∑ª¡
;

77 
ngx_hâp_myã°_˘x_t
* 
my˘x
 = 
	`ngx_hâp_gë_moduÀ_˘x
(
¥
, 
ngx_hâp_myã°_moduÀ
);

79 
¥
->
hódîs_out
.
°©us
 = 
r
->headers_out.status;

82 i‡(
r
->
hódîs_out
.
°©us
 =
NGX_HTTP_OK
)

84 
Êag
 = 0;

90 
ngx_buf_t
* 
pRecvBuf
 = &
r
->
up°ªam
->
buf„r
;

94 ; 
pRecvBuf
->
pos
 !pRecvBuf->
œ°
;ÖRecvBuf->pos++)

96 i‡(*
pRecvBuf
->
pos
 == ',' || *pRecvBuf->pos == '\"')

98 i‡(
Êag
 > 0)

100 
my˘x
->
°ock
[
Êag
 - 1].
Àn
 = 
pRecvBuf
->
pos
 - my˘x->°ock[Êag - 1].
d©a
;

102 
Êag
++;

103 
my˘x
->
°ock
[
Êag
 - 1].
d©a
 = 
pRecvBuf
->
pos
 + 1;

106 i‡(
Êag
 > 6)

113 
¥
->
wrôe_evít_h™dÀr
 = 
myã°_po°_h™dÀr
;

115  
NGX_OK
;

116 
	}
}

120 
	$myã°_po°_h™dÀr
(
ngx_hâp_ªque°_t
 * 
r
)

123 i‡(
r
->
hódîs_out
.
°©us
 !
NGX_HTTP_OK
)

125 
	`ngx_hâp_föÆize_ªque°
(
r
,Ñ->
hódîs_out
.
°©us
);

130 
ngx_hâp_myã°_˘x_t
* 
my˘x
 = 
	`ngx_hâp_gë_moduÀ_˘x
(
r
, 
ngx_hâp_myã°_moduÀ
);

134 
ngx_°r_t
 
ouçut_f‹m©
 = 
	`ngx_°rög
("stock[%V],Today currentÖrice: %V, volumn: %V");

137 
bodyÀn
 = 
ouçut_f‹m©
.
Àn
 + 
my˘x
->
°ock
[0].len

138 + 
my˘x
->
°ock
[1].
Àn
 + myctx->stock[4].len - 6;

139 
r
->
hódîs_out
.
c⁄ã¡_Àngth_n
 = 
bodyÀn
;

142 
ngx_buf_t
* 
b
 = 
	`ngx_¸óã_ãmp_buf
(
r
->
poﬁ
, 
bodyÀn
);

143 
	`ngx_¢¥ötf
(
b
->
pos
, 
bodyÀn
, (*)
ouçut_f‹m©
.
d©a
,

144 &
my˘x
->
°ock
[0], &myctx->stock[1], &myctx->stock[4]);

145 
b
->
œ°
 = b->
pos
 + 
bodyÀn
;

146 
b
->
œ°_buf
 = 1;

148 
ngx_chaö_t
 
out
;

149 
out
.
buf
 = 
b
;

150 
out
.
√xt
 = 
NULL
;

152 
ngx_°r_t
 
ty≥
 = 
	`ngx_°rög
("text/plain; charset=GBK");

153 
r
->
hódîs_out
.
c⁄ã¡_ty≥
 = 
ty≥
;

154 
r
->
hódîs_out
.
°©us
 = 
NGX_HTTP_OK
;

156 
r
->
c⁄√˘i⁄
->
buf„ªd
 |
NGX_HTTP_WRITE_BUFFERED
;

157 
ngx_öt_t
 
ªt
 = 
	`ngx_hâp_£nd_hódî
(
r
);

158 
ªt
 = 
	`ngx_hâp_ouçut_fûãr
(
r
, &
out
);

162 
	`ngx_hâp_föÆize_ªque°
(
r
, 
ªt
);

163 
	}
}

168 
	$ngx_hâp_myã°
(
ngx_c⁄f_t
 * 
cf
, 
ngx_comm™d_t
 * 
cmd
, * 
c⁄f
)

170 
ngx_hâp_c‹e_loc_c⁄f_t
 *
˛cf
;

175 
˛cf
 = 
	`ngx_hâp_c⁄f_gë_moduÀ_loc_c⁄f
(
cf
, 
ngx_hâp_c‹e_moduÀ
);

180 
˛cf
->
h™dÀr
 = 
ngx_hâp_myã°_h™dÀr
;

182  
NGX_CONF_OK
;

183 
	}
}

185 
ngx_öt_t


186 
	$ngx_hâp_myã°_h™dÀr
(
ngx_hâp_ªque°_t
 * 
r
)

189 
ngx_hâp_myã°_˘x_t
* 
my˘x
 = 
	`ngx_hâp_gë_moduÀ_˘x
(
r
, 
ngx_hâp_myã°_moduÀ
);

190 i‡(
my˘x
 =
NULL
)

192 
my˘x
 = 
	`ngx_∑Œoc
(
r
->
poﬁ
, (
ngx_hâp_myã°_˘x_t
));

193 i‡(
my˘x
 =
NULL
)

195  
NGX_ERROR
;

199 
	`ngx_hâp_£t_˘x
(
r
, 
my˘x
, 
ngx_hâp_myã°_moduÀ
);

203 
ngx_hâp_po°_subªque°_t
 *
p§
 = 
	`ngx_∑Œoc
(
r
->
poﬁ
, (ngx_http_post_subrequest_t));

204 i‡(
p§
 =
NULL
)

206  
NGX_HTTP_INTERNAL_SERVER_ERROR
;

210 
p§
->
h™dÀr
 = 
myã°_subªque°_po°_h™dÀr
;

214 
p§
->
d©a
 = 
my˘x
;

219 
ngx_°r_t
 
sub_¥efix
 = 
	`ngx_°rög
("/list=");

220 
ngx_°r_t
 
sub_loˇti⁄
;

221 
sub_loˇti⁄
.
Àn
 = 
sub_¥efix
.À¿+ 
r
->
¨gs
.len;

222 
sub_loˇti⁄
.
d©a
 = 
	`ngx_∑Œoc
(
r
->
poﬁ
, sub_loˇti⁄.
Àn
);

223 
	`ngx_¢¥ötf
(
sub_loˇti⁄
.
d©a
, sub_loˇti⁄.
Àn
,

224 "%V%V", &
sub_¥efix
, &
r
->
¨gs
);

227 
ngx_hâp_ªque°_t
 *
§
;

232 
ngx_öt_t
 
rc
 = 
	`ngx_hâp_subªque°
(
r
, &
sub_loˇti⁄
, 
NULL
, &
§
, 
p§
, 
NGX_HTTP_SUBREQUEST_IN_MEMORY
);

233 i‡(
rc
 !
NGX_OK
)

235  
NGX_ERROR
;

239  
NGX_DONE
;

240 
	}
}

	@/data/haoning/mygit/mynginxmodule/mynginx/source/chapter5/upstream/ngx_http_mytest_module.c

1 
	~<ngx_c⁄fig.h
>

2 
	~<ngx_c‹e.h
>

3 
	~<ngx_hâp.h
>

8 
ngx_hâp_°©us_t
 
	m°©us
;

9 
ngx_°r_t
 
	mbackídSîvî
;

10 } 
	tngx_hâp_myã°_˘x_t
;

14 
ngx_hâp_up°ªam_c⁄f_t
 
	mup°ªam
;

15 } 
	tngx_hâp_myã°_c⁄f_t
;

19 
ngx_hâp_myã°
(
ngx_c⁄f_t
 *
cf
, 
ngx_comm™d_t
 *
cmd
, *
c⁄f
);

21 
ngx_öt_t
 
ngx_hâp_myã°_h™dÀr
(
ngx_hâp_ªque°_t
 *
r
);

22 * 
ngx_hâp_myã°_¸óã_loc_c⁄f
(
ngx_c⁄f_t
 *
cf
);

23 *
ngx_hâp_myã°_mîge_loc_c⁄f
(
ngx_c⁄f_t
 *
cf
, *
∑ª¡
, *
chûd
);

25 
ngx_öt_t


26 
myã°_up°ªam_¥o˚ss_hódî
(
ngx_hâp_ªque°_t
 *
r
);

27 
ngx_öt_t


28 
myã°_¥o˚ss_°©us_löe
(
ngx_hâp_ªque°_t
 *
r
);

31 
ngx_°r_t
 
	gngx_hâp_¥oxy_hide_hódîs
[] =

33 
ngx_°rög
("Date"),

34 
ngx_°rög
("Server"),

35 
ngx_°rög
("X-Pad"),

36 
ngx_°rög
("X-Accel-Expires"),

37 
ngx_°rög
("X-Accel-Redirect"),

38 
ngx_°rög
("X-Accel-Limit-Rate"),

39 
ngx_°rög
("X-Accel-Buffering"),

40 
ngx_°rög
("X-Accel-Charset"),

41 
ngx_nuŒ_°rög


45 
ngx_comm™d_t
 
	gngx_hâp_myã°_comm™ds
[] =

49 
ngx_°rög
("mytest"),

50 
NGX_HTTP_MAIN_CONF
 | 
NGX_HTTP_SRV_CONF
 | 
NGX_HTTP_LOC_CONF
 | 
NGX_HTTP_LMT_CONF
 | 
NGX_CONF_NOARGS
,

51 
ngx_hâp_myã°
,

52 
NGX_HTTP_LOC_CONF_OFFSET
,

54 
NULL


57 
ngx_nuŒ_comm™d


60 
ngx_hâp_moduÀ_t
 
	gngx_hâp_myã°_moduÀ_˘x
 =

62 
NULL
,

63 
NULL
,

65 
NULL
,

66 
NULL
,

68 
NULL
,

69 
NULL
,

71 
ngx_hâp_myã°_¸óã_loc_c⁄f
,

72 
ngx_hâp_myã°_mîge_loc_c⁄f


75 
ngx_moduÀ_t
 
	gngx_hâp_myã°_moduÀ
 =

77 
NGX_MODULE_V1
,

78 &
ngx_hâp_myã°_moduÀ_˘x
,

79 
ngx_hâp_myã°_comm™ds
,

80 
NGX_HTTP_MODULE
,

81 
NULL
,

82 
NULL
,

83 
NULL
,

84 
NULL
,

85 
NULL
,

86 
NULL
,

87 
NULL
,

88 
NGX_MODULE_V1_PADDING


92 * 
	$ngx_hâp_myã°_¸óã_loc_c⁄f
(
ngx_c⁄f_t
 *
cf
)

94 
ngx_hâp_myã°_c⁄f_t
 *
mycf
;

96 
mycf
 = (
ngx_hâp_myã°_c⁄f_t
 *)
	`ngx_pˇŒoc
(
cf
->
poﬁ
, (ngx_http_mytest_conf_t));

97 i‡(
mycf
 =
NULL
)

99  
NULL
;

104 
mycf
->
up°ªam
.
c⁄√˘_timeout
 = 60000;

105 
mycf
->
up°ªam
.
£nd_timeout
 = 60000;

106 
mycf
->
up°ªam
.
ªad_timeout
 = 60000;

107 
mycf
->
up°ªam
.
°‹e_ac˚ss
 = 0600;

113 
mycf
->
up°ªam
.
buf„rög
 = 0;

114 
mycf
->
up°ªam
.
bufs
.
num
 = 8;

115 
mycf
->
up°ªam
.
bufs
.
size
 = 
ngx_∑gesize
;

116 
mycf
->
up°ªam
.
buf„r_size
 = 
ngx_∑gesize
;

117 
mycf
->
up°ªam
.
busy_buf„rs_size
 = 2 * 
ngx_∑gesize
;

118 
mycf
->
up°ªam
.
ãmp_fûe_wrôe_size
 = 2 * 
ngx_∑gesize
;

119 
mycf
->
up°ªam
.
max_ãmp_fûe_size
 = 1024 * 1024 * 1024;

128 
mycf
->
up°ªam
.
hide_hódîs
 = 
NGX_CONF_UNSET_PTR
;

129 
mycf
->
up°ªam
.
∑ss_hódîs
 = 
NGX_CONF_UNSET_PTR
;

131  
mycf
;

132 
	}
}

135 *
	$ngx_hâp_myã°_mîge_loc_c⁄f
(
ngx_c⁄f_t
 *
cf
, *
∑ª¡
, *
chûd
)

137 
ngx_hâp_myã°_c⁄f_t
 *
¥ev
 = (ngx_hâp_myã°_c⁄f_à*)
∑ª¡
;

138 
ngx_hâp_myã°_c⁄f_t
 *
c⁄f
 = (ngx_hâp_myã°_c⁄f_à*)
chûd
;

140 
ngx_hash_öô_t
 
hash
;

141 
hash
.
max_size
 = 100;

142 
hash
.
buckë_size
 = 1024;

143 
hash
.
«me
 = "proxy_headers_hash";

144 i‡(
	`ngx_hâp_up°ªam_hide_hódîs_hash
(
cf
, &
c⁄f
->
up°ªam
,

145 &
¥ev
->
up°ªam
, 
ngx_hâp_¥oxy_hide_hódîs
, &
hash
)

146 !
NGX_OK
)

148  
NGX_CONF_ERROR
;

151  
NGX_CONF_OK
;

152 
	}
}

155 
ngx_öt_t


156 
	$myã°_up°ªam_¸óã_ªque°
(
ngx_hâp_ªque°_t
 *
r
)

161 
ngx_°r_t
 
backídQuîyLöe
 =

162 
	`ngx_°rög
("GET /search?q=%V HTTP/1.1\r\nHost: www.google.com\r\nConnection: close\r\n\r\n");

163 
ngx_öt_t
 
quîyLöeLí
 = 
backídQuîyLöe
.
Àn
 + 
r
->
¨gs
.len - 2;

168 
ngx_buf_t
* 
b
 = 
	`ngx_¸óã_ãmp_buf
(
r
->
poﬁ
, 
quîyLöeLí
);

169 i‡(
b
 =
NULL
)

170  
NGX_ERROR
;

172 
b
->
œ°
 = b->
pos
 + 
quîyLöeLí
;

175 
	`ngx_¢¥ötf
(
b
->
pos
, 
quîyLöeLí
 ,

176 (*)
backídQuîyLöe
.
d©a
, &
r
->
¨gs
);

179 
r
->
up°ªam
->
ªque°_bufs
 = 
	`ngx_Æloc_chaö_lök
‘->
poﬁ
);

180 i‡(
r
->
up°ªam
->
ªque°_bufs
 =
NULL
)

181  
NGX_ERROR
;

184 
r
->
up°ªam
->
ªque°_bufs
->
buf
 = 
b
;

185 
r
->
up°ªam
->
ªque°_bufs
->
√xt
 = 
NULL
;

187 
r
->
up°ªam
->
ªque°_£¡
 = 0;

188 
r
->
up°ªam
->
hódî_£¡
 = 0;

190 
r
->
hódî_hash
 = 1;

191  
NGX_OK
;

192 
	}
}

194 
ngx_öt_t


195 
	$myã°_¥o˚ss_°©us_löe
(
ngx_hâp_ªque°_t
 *
r
)

197 
size_t
 
Àn
;

198 
ngx_öt_t
 
rc
;

199 
ngx_hâp_up°ªam_t
 *
u
;

202 
ngx_hâp_myã°_˘x_t
* 
˘x
 = 
	`ngx_hâp_gë_moduÀ_˘x
(
r
, 
ngx_hâp_myã°_moduÀ
);

203 i‡(
˘x
 =
NULL
)

205  
NGX_ERROR
;

208 
u
 = 
r
->
up°ªam
;

212 
rc
 = 
	`ngx_hâp_∑r£_°©us_löe
(
r
, &
u
->
buf„r
, &
˘x
->
°©us
);

215 i‡(
rc
 =
NGX_AGAIN
)

217  
rc
;

220 i‡(
rc
 =
NGX_ERROR
)

222 
	`ngx_log_îr‹
(
NGX_LOG_ERR
, 
r
->
c⁄√˘i⁄
->
log
, 0,

225 
r
->
hâp_vîsi⁄
 = 
NGX_HTTP_VERSION_9
;

226 
u
->
°©e
->
°©us
 = 
NGX_HTTP_OK
;

228  
NGX_OK
;

239 i‡(
u
->
°©e
)

241 
u
->
°©e
->
°©us
 = 
˘x
->°©us.
code
;

244 
u
->
hódîs_ö
.
°©us_n
 = 
˘x
->
°©us
.
code
;

246 
Àn
 = 
˘x
->
°©us
.
íd
 - ctx->°©us.
°¨t
;

247 
u
->
hódîs_ö
.
°©us_löe
.
Àn
 =Üen;

249 
u
->
hódîs_ö
.
°©us_löe
.
d©a
 = 
	`ngx_≤Æloc
(
r
->
poﬁ
, 
Àn
);

250 i‡(
u
->
hódîs_ö
.
°©us_löe
.
d©a
 =
NULL
)

252  
NGX_ERROR
;

255 
	`ngx_mem˝y
(
u
->
hódîs_ö
.
°©us_löe
.
d©a
, 
˘x
->
°©us
.
°¨t
, 
Àn
);

260 
u
->
¥o˚ss_hódî
 = 
myã°_up°ªam_¥o˚ss_hódî
;

264  
	`myã°_up°ªam_¥o˚ss_hódî
(
r
);

265 
	}
}

268 
ngx_öt_t


269 
	$myã°_up°ªam_¥o˚ss_hódî
(
ngx_hâp_ªque°_t
 *
r
)

271 
ngx_öt_t
 
rc
;

272 
ngx_èbÀ_ñt_t
 *
h
;

273 
ngx_hâp_up°ªam_hódî_t
 *
hh
;

274 
ngx_hâp_up°ªam_maö_c⁄f_t
 *
umcf
;

279 
umcf
 = 
	`ngx_hâp_gë_moduÀ_maö_c⁄f
(
r
, 
ngx_hâp_up°ªam_moduÀ
);

286 
rc
 = 
	`ngx_hâp_∑r£_hódî_löe
(
r
, &r->
up°ªam
->
buf„r
, 1);

288 i‡(
rc
 =
NGX_OK
)

291 
h
 = 
	`ngx_li°_push
(&
r
->
up°ªam
->
hódîs_ö
.
hódîs
);

292 i‡(
h
 =
NULL
)

294  
NGX_ERROR
;

297 
h
->
hash
 = 
r
->
hódî_hash
;

299 
h
->
key
.
Àn
 = 
r
->
hódî_«me_íd
 -Ñ->
hódî_«me_°¨t
;

300 
h
->
vÆue
.
Àn
 = 
r
->
hódî_íd
 -Ñ->
hódî_°¨t
;

302 
h
->
key
.
d©a
 = 
	`ngx_≤Æloc
(
r
->
poﬁ
,

303 
h
->
key
.
Àn
 + 1 + h->
vÆue
.len + 1 + h->key.len);

304 i‡(
h
->
key
.
d©a
 =
NULL
)

306  
NGX_ERROR
;

309 
h
->
vÆue
.
d©a
 = h->
key
.d©®+ h->key.
Àn
 + 1;

310 
h
->
lowˇ£_key
 = h->
key
.
d©a
 + h->key.
Àn
 + 1 + h->
vÆue
.len + 1;

312 
	`ngx_mem˝y
(
h
->
key
.
d©a
, 
r
->
hódî_«me_°¨t
, h->key.
Àn
);

313 
h
->
key
.
d©a
[h->key.
Àn
] = '\0';

314 
	`ngx_mem˝y
(
h
->
vÆue
.
d©a
, 
r
->
hódî_°¨t
, h->vÆue.
Àn
);

315 
h
->
vÆue
.
d©a
[h->vÆue.
Àn
] = '\0';

317 i‡(
h
->
key
.
Àn
 =
r
->
lowˇ£_ödex
)

319 
	`ngx_mem˝y
(
h
->
lowˇ£_key
, 
r
->
lowˇ£_hódî
, h->
key
.
Àn
);

323 
	`ngx_°æow
(
h
->
lowˇ£_key
, h->
key
.
d©a
, h->key.
Àn
);

327 
hh
 = 
	`ngx_hash_föd
(&
umcf
->
hódîs_ö_hash
, 
h
->
hash
,

328 
h
->
lowˇ£_key
, h->
key
.
Àn
);

330 i‡(
hh
 && hh->
	`h™dÀr
(
r
, 
h
, hh->
off£t
Ë!
NGX_OK
)

332  
NGX_ERROR
;

340 i‡(
rc
 =
NGX_HTTP_PARSE_HEADER_DONE
)

344 i‡(
r
->
up°ªam
->
hódîs_ö
.
£rvî
 =
NULL
)

346 
h
 = 
	`ngx_li°_push
(&
r
->
up°ªam
->
hódîs_ö
.
hódîs
);

347 i‡(
h
 =
NULL
)

349  
NGX_ERROR
;

352 
h
->
hash
 = 
	`ngx_hash
(ngx_hash(ngx_hash(ngx_hash(

353 
	`ngx_hash
('s', 'e'), 'r'), 'v'), 'e'), 'r');

355 
	`ngx_°r_£t
(&
h
->
key
, "Server");

356 
	`ngx_°r_nuŒ
(&
h
->
vÆue
);

357 
h
->
lowˇ£_key
 = (
u_ch¨
 *) "server";

360 i‡(
r
->
up°ªam
->
hódîs_ö
.
d©e
 =
NULL
)

362 
h
 = 
	`ngx_li°_push
(&
r
->
up°ªam
->
hódîs_ö
.
hódîs
);

363 i‡(
h
 =
NULL
)

365  
NGX_ERROR
;

368 
h
->
hash
 = 
	`ngx_hash
(ngx_hash(ngx_hash('d', 'a'), 't'), 'e');

370 
	`ngx_°r_£t
(&
h
->
key
, "Date");

371 
	`ngx_°r_nuŒ
(&
h
->
vÆue
);

372 
h
->
lowˇ£_key
 = (
u_ch¨
 *) "date";

375  
NGX_OK
;

381 i‡(
rc
 =
NGX_AGAIN
)

383  
NGX_AGAIN
;

387 
	`ngx_log_îr‹
(
NGX_LOG_ERR
, 
r
->
c⁄√˘i⁄
->
log
, 0,

390  
NGX_HTTP_UPSTREAM_INVALID_HEADER
;

392 
	}
}

395 
	$myã°_up°ªam_föÆize_ªque°
(
ngx_hâp_ªque°_t
 *
r
, 
ngx_öt_t
 
rc
)

397 
	`ngx_log_îr‹
(
NGX_LOG_DEBUG
, 
r
->
c⁄√˘i⁄
->
log
, 0,

399 
	}
}

403 
	$ngx_hâp_myã°
(
ngx_c⁄f_t
 *
cf
, 
ngx_comm™d_t
 *
cmd
, *
c⁄f
)

405 
ngx_hâp_c‹e_loc_c⁄f_t
 *
˛cf
;

410 
˛cf
 = 
	`ngx_hâp_c⁄f_gë_moduÀ_loc_c⁄f
(
cf
, 
ngx_hâp_c‹e_moduÀ
);

415 
˛cf
->
h™dÀr
 = 
ngx_hâp_myã°_h™dÀr
;

417  
NGX_CONF_OK
;

418 
	}
}

421 
ngx_öt_t


422 
	$ngx_hâp_myã°_h™dÀr
(
ngx_hâp_ªque°_t
 *
r
)

424 
	`Ârötf
(
°dîr
, "haoningÇgx_http_mytest_handler:%s\r\n","ningning");

426 
ngx_hâp_myã°_˘x_t
* 
my˘x
 = 
	`ngx_hâp_gë_moduÀ_˘x
(
r
, 
ngx_hâp_myã°_moduÀ
);

427 i‡(
my˘x
 =
NULL
)

429 
my˘x
 = 
	`ngx_∑Œoc
(
r
->
poﬁ
, (
ngx_hâp_myã°_˘x_t
));

430 i‡(
my˘x
 =
NULL
)

432  
NGX_ERROR
;

435 
	`ngx_hâp_£t_˘x
(
r
, 
my˘x
, 
ngx_hâp_myã°_moduÀ
);

439 i‡(
	`ngx_hâp_up°ªam_¸óã
(
r
Ë!
NGX_OK
)

441 
	`ngx_log_îr‹
(
NGX_LOG_ERR
, 
r
->
c⁄√˘i⁄
->
log
, 0, "ngx_http_upstream_create() failed");

442  
NGX_ERROR
;

446 
ngx_hâp_myã°_c⁄f_t
 *
mycf
 = (ngx_hâp_myã°_c⁄f_à*Ë
	`ngx_hâp_gë_moduÀ_loc_c⁄f
(
r
, 
ngx_hâp_myã°_moduÀ
);

447 
ngx_hâp_up°ªam_t
 *
u
 = 
r
->
up°ªam
;

449 
u
->
c⁄f
 = &
mycf
->
up°ªam
;

451 
u
->
buf„rög
 = 
mycf
->
up°ªam
.buffering;

454 
u
->
ªsﬁved
 = (
ngx_hâp_up°ªam_ªsﬁved_t
*Ë
	`ngx_pˇŒoc
(
r
->
poﬁ
, (ngx_http_upstream_resolved_t));

455 i‡(
u
->
ªsﬁved
 =
NULL
)

457 
	`ngx_log_îr‹
(
NGX_LOG_ERR
, 
r
->
c⁄√˘i⁄
->
log
, 0,

458 "ngx_pˇŒo¯ªsﬁvedÉº‹. %s.", 
	`°ªº‹
(
î∫o
));

459  
NGX_ERROR
;

463 
sockaddr_ö
 
backídSockAddr
;

464 
ho°ít
 *
pHo°
 = 
	`gëho°by«me
((*) "www.google.com");

465 i‡(
pHo°
 =
NULL
)

467 
	`ngx_log_îr‹
(
NGX_LOG_ERR
, 
r
->
c⁄√˘i⁄
->
log
, 0,

468 "gëho°by«mêÁû. %s", 
	`°ªº‹
(
î∫o
));

470  
NGX_ERROR
;

474 
backídSockAddr
.
sö_Ámûy
 = 
AF_INET
;

475 
backídSockAddr
.
sö_p‹t
 = 
	`ht⁄s
((
ö_p‹t_t
) 80);

476 * 
pDmsIP
 = 
	`öë_¡ﬂ
(*(
ö_addr
*Ë(
pHo°
->
h_addr_li°
[0]));

477 
backídSockAddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
pDmsIP
);

478 
my˘x
->
backídSîvî
.
d©a
 = (
u_ch¨
*)
pDmsIP
;

479 
my˘x
->
backídSîvî
.
Àn
 = 
	`°æí
(
pDmsIP
);

482 
u
->
ªsﬁved
->
sockaddr
 = (sockadd∏*)&
backídSockAddr
;

483 
u
->
ªsﬁved
->
sockÀn
 = (
sockaddr_ö
);

484 
u
->
ªsﬁved
->
«ddrs
 = 1;

487 
u
->
¸óã_ªque°
 = 
myã°_up°ªam_¸óã_ªque°
;

488 
u
->
¥o˚ss_hódî
 = 
myã°_¥o˚ss_°©us_löe
;

489 
u
->
föÆize_ªque°
 = 
myã°_up°ªam_föÆize_ªque°
;

492 
r
->
maö
->
cou¡
++;

494 
	`ngx_hâp_up°ªam_öô
(
r
);

496  
NGX_DONE
;

497 
	}
}

	@
1
.
1
/usr/include
2
186
/data/haoning/mygit/mynginxmodule/mynginx/source/chapter5/subrequest/ngx_http_mytest_module.c
/data/haoning/mygit/mynginxmodule/mynginx/source/chapter5/upstream/ngx_http_mytest_module.c

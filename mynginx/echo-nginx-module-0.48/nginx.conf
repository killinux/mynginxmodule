worker_processes  1;
error_log  logs/error.log  debug;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    server {
        listen       80;
        server_name  localhost;
        location / {
            root   html;
            index  index.html index.htm;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
		location /test {
            set $foo hello;
            echo "foo: $foo";
			echo "uri = $uri";
        	echo "request_uri = $request_uri";
			echo "name: $arg_name";
            echo "class: $arg_class";
        }
# curl http://localhost/test?name=haoning\&class=abc
		location /hello {
			echo "hello, world!";
		}    

		#location /hello {
		#	echo -n "hello, ";
		#	echo "world!";
		#}    

		location /timed_hello {
			echo_reset_timer;
			echo hello world;
			echo "'hello world' takes about $echo_timer_elapsed sec.";
			echo hiya igor;
			echo "'hiya igor' takes about $echo_timer_elapsed sec.";
		}    

		location /echo_with_sleep {
			echo hello;
			echo_flush;  # ensure the client can see previous output immediately
				echo_sleep   2.5;  # in sec
				echo world;
		}    

# in the following example, accessing /echo yields
#   hello
#   world
#   blah 
#   hiya 
#   igor 
		location /echo {
			echo_before_body hello;
			echo_before_body world;
			proxy_pass $scheme://127.0.0.1:$server_port$request_uri/more;
			echo_after_body hiya;
			echo_after_body igor;
		}    
    }
}
